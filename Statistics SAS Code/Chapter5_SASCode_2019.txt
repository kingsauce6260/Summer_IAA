

libname stat1 'G:\My Drive\Summer II - Statistics Bootcamp\Bootcamp Data';
run;
%let interval=Gr_Liv_Area Basement_Area Garage_Area Deck_Porch_Area Lot_Area Age_Sold Bedroom_AbvGr Total_Bathroom;
ods graphics on;
%let categorical=House_Style2 Overall_Qual2 Overall_Cond2 Fireplaces Season_Sold Garage_Type_2 Foundation_2 Heating_QC Masonry_Veneer Lot_Shape_2 Central_Air;
%let homefolder=G:\My Drive\Summer II - Statistics Bootcamp\Lessons_2018;



Chapter 5
/***********************************************************************/
/*********************************Misspecified Model ********************/

/*  Data set to illustrate polynomial regression */
data paper;
input obs amount strength;
datalines;
1 1 2.4
2 1 2.6
3 1 2.7
4 2 2.5
5 2 2.6
6 2 2.6
7 2 2.7
8 2 2.8
9 3 2.8
10 3 2.8
11 3 3.0
12 3 3.0
13 4 3.0
14 4 2.9
15 4 2.9
16 4 3.0
17 4 3.1
18 5 2.9
19 5 2.9
20 5 3.0
21 5 2.9
22 5 2.8
;
run;
/* Plot to view data */
proc sgplot data=paper;
  scatter x=amount y=strength;
  title "Paper data";
run;

/* Use sgplot to view data with a regression line through it */
proc sgplot data=paper;
  reg x=amount y=strength/lineatrs=(color=blue pattern=solid);
  title “Paper data-Linear ”;
run;

/* Run a simple linear regression. Will see the residual plot has a curvature to it */
proc reg data=paper;
  model strength=amount;
run;
quit;

/* Another plot to show data with quadratic line through it */
proc sgplot data=paper;
  reg x=amount y=strength/degree=2 lineattr=(color=green pattern=solid);
  title “Paper data - Quadratic”;
run;

/* Can use glmselect to select how high of power to use */
/* Should use hierarchy = single to ensure no aliasing occurs */
proc glmselect data=paper outdesign=paper2;
  effect p_effect=polynomial (amount/degree=4);
  model strength=p_effect/selection=backward select=SL slstay=0.05
    hierarchy=single showpvalues;
  title “Paper data: backward selection”;
run;
quit;

/* The data created in paper2 (in outdesign) can be used in proc reg 
    to determine the appropriateness of the model. ALL of the variables
    in the final model (including any interaction and higher order terms
    will be saved in &_GLSMOD.  */

proc reg data=paper2 plots=all;
  model strength=&_GLSMOD/lackfit;
run;
quit;


/* An illustration with a fairly complex model...interactions and higher order terms  */
proc glmselect data=ameshousing3_train outdesign=ames3;
  effect p_effect=polynomial (age_sold/degree=4); 
  model saleprice=Gr_Liv_Area|Basement_Area|Garage_Area|Deck_Porch_Area|Lot_Area|Age_Sold|Bedroom_AbvGr|Total_Bathroom|p_effect @2/selection=backward select=SL slstay=0.05
    hierarchy=single showpvalues;
run;
quit;

/* Now send it to proc reg to investigate whether or not the model is appropriate 
  use output to output residuals and predicted values to a different data set  */
proc reg data=ames3;
  model SalePrice=&_GLSMOD;
  output out=check r=residual p=pred;
run;
quit;

/********************************************************************/
/************************************Not Constant Variance ****************/

/* Need to create absolute values of residuals before calculating 
   Spearman correlation  */
data check;
  set check;
  abserror=abs(residual);
run;

/* Calculate spearman correlation between abs(residuals) and predicted values  */
proc corr data=check spearman nosimple;
  var abserror pred;
run;

/* Perform test of normality of residuals  */
proc univariate data=check normal plots;
 var residual;
 probplot;
run;

/* Data to illustrate transformations and using boxcox */
data trans;
input obs x y;
datalines;
1 1 21.191 
2 2 24.673 
3 3 32.988 
4 4 33.131 
5 5 33.743 
6 6 51.034 
7 7 31.468 
8 8 66.324 
9 9 55.731 
10 10 43.445 
11 11 36.197 
12 12 30.410 
13 13 69.602 
14 14 56.504 
15 15 85.681 
16 16 61.759 
17 17 41.196 
18 18 83.019 
19 19 160.206 
20 20 115.455 
21 21 27.436 
22 22 79.797 
23 23 108.870 
24 24 62.933 
25 25 113.648 
26 26 81.484 
27 27 108.889 
28 28 165.372 
29 29 134.783 
30 30 111.471 

;

/* Run the regression model to see that the variance is not constant  */
proc reg data=trans;
  model y=x;
run;
quit;

/* Can use the variance-stabilizing log transformation to transform the variance */
data trans2;
 set trans;
 logy=log(y);
 run;

/* Run the regression model with the log transformed y to see that variance is now constant */
 proc reg data=trans2;
   model logy=x;
   run;
   quit;
/*******************************************************/
/**************************Normality********************/

/* The log transformation is also identified in the Box-Cox algorithm as the best transformation
    to transform to normality  */
 proc transreg data=trans2;
   model BoxCox(y)=identity(x);
   run;

/***********************************************************/
/**********************Correlated Error terms*************/

/* Code to output Durbin-Watson test  */
proc reg data=stat1.minntemp;
 model temp=time timesq/dwprob;
run;
quit;
/***************************************************************/


/* If want to produce more than just the first order D-W test, can use proc autoreg */
proc autoreg data=stat1.minntemp;
  model temp=time timesq/dw=24 dwprob;
run;

/*********************************************************************/
/* Proc reg produces MANY plots to visualize if there are outliers or influential points.
   You can also output studentized residuals (student), Rstudent residuals (Rstudent), dffits (dffits),
   Cook's D (cookd) and the hat matrix value (h).  By outputing this to a data set, you can easily subset to find suspect observations */ 

proc glmselect data=ameshousing3_train plots=all outdesign=glmameshousing3AIC2;
  STEPWISEAIC: model SalePrice=&interval/selection=stepwise details=steps select=AIC;
  title "Stepwise model for SalePrice - AIC";
  store out=glmameshousing3AIC;
run;

proc reg data=glmameshousing3AIC2 plots(unpack) = all;
  model SalePrice=&_GLSMOD/influence spec partial;
  output out=check r=residual p=pred rstudent=rstudent h=leverage;
run;
quit;

/*******************************************************************/

/* Creating a data set with Basement Area squared and Basement Area cubed */
data ames;
set ameshousing3_train;
BA2=Basement_Area**2;
BA3=Basement_Area**3;
run;

/* Use vif, collin, and collinoint to explore if collinearity is an issue */
proc reg data=ames;
  model SalePrice=Basement_Area BA2 BA3/vif collin collinoint;
run;
quit;

/* Can center variables by using proc stdize (with method=mean) */
proc stdize data=ameshousing3_train method=mean 
	out=ameshousing3_center (rename=(Basement_Area= Center_BA));
   	var Basement_Area;
run;

/* Now recreate higher order terms (or can just use proc glmselect to do this as well */
data ameshousing3_center;
  	set ameshousing3_center;
 	center_BA2=Center_BA**2;
	center_BA3=Center_BA**3;
run;

/*Now rerun regression....multicollinearity is not an issue now */
proc reg data=ameshousing3_center;
  model SalePrice = center_BA center_BA2 Center_BA3/vif collin collinoint;
run;
quit;
